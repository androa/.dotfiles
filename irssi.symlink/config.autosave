servers = (
  { address = "irc.stealth.net"; chatnet = "IRCnet"; port = "6668"; },
  { address = "irc.efnet.net"; chatnet = "EFNet"; port = "6667"; },
  { 
    address = "irc.undernet.org";
    chatnet = "Undernet";
    port = "6667";
  },
  { address = "irc.dal.net"; chatnet = "DALnet"; port = "6667"; },
  { 
    address = "irc.quakenet.org";
    chatnet = "QuakeNet";
    port = "6667";
  },
  { address = "silc.silcnet.org"; chatnet = "SILC"; port = "706"; },
  {
    address = "irc.vgnett.no";
    chatnet = "worknet";
    port = "80";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "yes";
  },
  {
    address = "irc.freenode.net";
    chatnet = "freenode";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "yes";
  }
);

chatnets = {
  IRCnet = {
    type = "IRC";
    max_kicks = "4";
    max_msgs = "5";
    max_whois = "4";
    max_query_chans = "5";
  };
  EFNet = { 
    type = "IRC";
    max_kicks = "4";
    max_msgs = "3";
    max_whois = "1";
  };
  Undernet = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  DALnet = {
    type = "IRC";
    max_kicks = "4";
    max_msgs = "3";
    max_whois = "30";
  };
  QuakeNet = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  SILC = { type = "SILC"; };
  worknet = { type = "IRC"; };
  freenode = { type = "IRC"; };
  linpro = { type = "IRC"; };
};

channels = (
  { name = "#irssi"; chatnet = "ircnet"; autojoin = "No"; },
  { name = "silc"; chatnet = "silc"; autojoin = "No"; },
  { name = "#nettby"; chatnet = "worknet"; autojoin = "yes"; },
  { name = "#vgmm"; chatnet = "worknet"; autojoin = "yes"; },
  { name = "#vgf"; chatnet = "worknet"; autojoin = "yes"; },
  { name = "#nophp"; chatnet = "freenode"; autojoin = "yes"; },
  { name = "#vgf2"; chatnet = "worknet"; autojoin = "yes"; },
  { name = "#varnish"; chatnet = "linpro"; autojoin = "yes"; },
  { name = "#phoenix"; chatnet = "worknet"; autojoin = "yes"; },
  { name = "#vgdrift"; chatnet = "worknet"; autojoin = "yes"; },
  { name = "#zftalk"; chatnet = "freenode"; autojoin = "yes"; },
  { name = "#imbo"; chatnet = "freenode"; autojoin = "yes"; },
  { name = "#vgeng"; chatnet = "worknet"; autojoin = "yes"; },
  { name = "#phpdocumentor"; chatnet = "freenode"; autojoin = "yes"; }
);

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "who";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  UPTIME = "eval exec - expr `date +%s` - \\$F | awk '{print \"Irssi uptime: \"int(\\\\\\$1/3600/24)\"d \"int(\\\\\\$1/3600%24)\"h \"int(\\\\\\$1/60%60)\"m \"int(\\\\\\$1%60)\"s\" }'";
  CALC = "exec - if which bc &>/dev/null\\; then echo '$*' | bc | awk '{print \"$*=\"$$1}'\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";
  EXEMPTLIST = "mode $C +e";
  ATAG = "WINDOW SERVER";
  rage = "say (╯°□°）╯︵ ┻━┻";
  unrage = "say ┬─┬ノ( º _ ºノ) ";
  ultrarage = "say (ﾉಥ益ಥ）ﾉ﻿ ┻━┻";
  tjocrage = "say ┻━┻ ︵ヽ(`Д´)ﾉ︵﻿ ┻━┻";
  repost = "say http://acidted.files.wordpress.com/2011/02/repost.jpg";
  psycho = "say http://www.youtube.com/watch?v=vzN3qO-qc8U";
  shit = "say http://www.youtube.com/watch?v=HrfCixsd2N8";
  reindl = "say damned this sort of decisions MUST NOT happen";
  jfc = "say http://25.media.tumblr.com/tumblr_lwmz2b3aqA1r85xb6o1_400.jpg";
  itwasyou = "say http://27.media.tumblr.com/tumblr_m0ehsfiJ2N1qdlh1io1_250.gif";
  fuckno = "say http://bilder.artige.no/store/31/31432.gif";
  enough = "say http://i0.kym-cdn.com/photos/images/original/000/318/515/9de.gif";
  stfu = "say ╭∩╮（︶︿︶）╭∩╮";
  zoidberg = "say Why not (V)(\\;,,\\;)(V)";
  nojoke = "say http://imgur.com/GGEsG.jpg";
  doitlive = "/say http://www.youtube.com/watch?v=eUFY8Zw0Bag";
  deal = "/say http://i.imgur.com/Y5pLmOe.gif";
  flip = "/say http://i.imgur.com/AJ4gCHi.gif";
  howaboutno = "/say http://i.imgur.com/e0J9dxJ.gif";
  swine = "say http://i.imgur.com/2XAvgEX.gif";
  nodeal = "say http://i.imgur.com/gVwnsJ4.gif";
  idk = "say http://i.imgur.com/jueVVFC.gif";
  say = "msg *";
  gifflip = "say http://i.imgur.com/diNql.gif";
  dance = "say \\\\o\\\\ |o| /o/";
  office = "say http://i.imgur.com/dWAOONi.gif";
  mindblown = "say http://i.imgur.com/b3mWa.gif";
  dick = "say http://i.imgur.com/L8x8kte.gif";
  nothing = "say http://i.qkme.me/3tdxrb.jpg";
  busy = "say http://i.imgur.com/b7OVExg.gif";
  letmesee = "say http://imgur.com/gallery/5JQJV";
  apetornado = "say http://i.imgur.com/NXfLcSo.gif";
  gonbgud = "say http://i.imgur.com/k095gSa.gif";
  nofucks = "say http://i.imgur.com/3PFZ1i5.gif";
  shock = "say http://i.imgur.com/rnNQIW0.gif";
  yes = "say http://i.imgur.com/zoTX8Ir.gif";
  doghouse = "say http://i.imgur.com/r2aivqm.gif";
  grin = "say http://i.imgur.com/Q25xt84.gif";
  fuckthis = "say http://i.imgur.com/QYiip7d.gif";
  right = "say http://i.imgur.com/2YphWga.gif";
  ohyeah = "say http://i.imgur.com/8qlbLHR.gif";
  coolstory = "say http://i.imgur.com/V5A4tPU.gif";
  perfectgifs = "say http://i.imgur.com/dc9WCRC.gif";
  kaffekoppen = "say http://i.imgur.com/rnNQIW0.gif";
  alldie = "say http://i.imgur.com/IYMfepY.png";
  handleit = "say http://i.imgur.com/hf4smdY.gif";
  excuses = "say http://i.imgur.com/2RkShyT.gif";
  stress = "say http://i.imgur.com/Jvf2S1S.gif";
  frustrated = "say http://i.imgur.com/d1OBwZm.gif";
  wat = "say http://i.imgur.com/BMtKfSV.gif";
  ilied = "say http://i.imgur.com/aEynBiA.gif";
  forgot = "say http://i.imgur.com/t0VrNnP.gif";
  winning = "say http://i.imgur.com/uqm9D6Y.gif";
  hawkward = "say http://i.imgur.com/uM4rfPb.jpg";
  fuckpapers = "say http://i.imgur.com/5ethf.jpg";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://irssi.org/help/";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        act = { priority = "10"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
settings = {
  core = {
    real_name = "André Roaldseth";
    user_name = "andrer";
    nick = "andrer";
  };
  "fe-common/core" = {
    beep_when_window_active = "yes";
    beep_when_away = "yes";
    beep_msg_level = "MSGS NOTICES DCC DCCMSGS HILIGHT";
    bell_beeps = "yes";
  };
  "fe-text" = {
    actlist_sort = "refnum";
    scrollback_lines = "200000";
    scrollback_time = "1day";
  };
  "perl/core/scripts" = {
    irssinotifier_api_token = "205e96f8-a3d4-44f3-99ce-2aaad3b4161f";
    irssinotifier_screen_detached_only = "no";
    irssinotifier_require_idle_seconds = "600";
  };
};
logs = { };
ignores = ( { mask = "testkosebot"; level = "ALL"; } );
windows = {
  1 = { immortal = "yes"; name = "(status)"; level = "ALL"; };
  2 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#nettby";
        tag = "worknet";
      }
    );
  };
  3 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#vgmm";
        tag = "worknet";
      }
    );
  };
  4 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#vgf";
        tag = "worknet";
      }
    );
  };
  5 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#vgf2";
        tag = "worknet";
      }
    );
  };
  6 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#phoenix";
        tag = "worknet";
      }
    );
  };
  7 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#vgdrift";
        tag = "worknet";
      }
    );
  };
  8 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#nophp";
        tag = "freenode";
      }
    );
  };
  9 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#phpdocumentor";
        tag = "freenode";
      }
    );
  };
  10 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#zftalk";
        tag = "freenode";
      }
    );
  };
  11 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#imbo";
        tag = "freenode";
      }
    );
  };
  12 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#vgeng";
        tag = "worknet";
      }
    );
  };
};
mainwindows = { 2 = { first_line = "1"; lines = "22"; }; };
